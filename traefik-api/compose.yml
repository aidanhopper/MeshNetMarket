services:
  api:
    build: .
    restart: unless-stopped
    ports:
      - 4000:4000
    volumes:
      - ./.env:/api/.env
      - ./dynamic.json:/api/dynamic.json
  traefik:
    container_name: traefik
    image: traefik:v3.3
    restart: unless-stopped 
    links:
      - api:api
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - ./traefik.yml:/etc/traefik/traefik-template.yml
    command:
      - /bin/sh
      - -c
      - |
        awk '{gsub(/\$\{TRAEFIK_API_TOKEN\}/, ENVIRON["TRAEFIK_API_TOKEN"]); print}' \
        /etc/traefik/traefik-template.yml > /etc/traefik/traefik.yml && 
        traefik --configFile=/etc/traefik/traefik.yml
    env_file:
      - .env
  ziti:
    container_name: ziti
    image: openziti/ziti-edge-tunnel:latest
    privileged: true
    volumes:
      - ./identities:/ziti-edge-tunnel
    network_mode: service:traefik
  zitadel:
    restart: 'always'
    container_name: zitadel
    networks:
      - 'zitadel'
    image: 'ghcr.io/zitadel/zitadel:latest'
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: true
    depends_on:
      db:
        condition: 'service_healthy'
  db:
    restart: 'always'
    image: postgres:17-alpine
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - 'zitadel'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
networks:
  zitadel:
